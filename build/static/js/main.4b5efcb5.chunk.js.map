{"version":3,"sources":["logo.png","reducers/toolbarReducer.js","reducers/boardReducer.js","reducers/uploadModalReducer.js","reducers/rootReducer.js","store.js","pages/Home.js","actions/boardActions.js","components/Board.js","actions/uploadModalActions.js","components/Toolbar.js","components/Footer.js","components/UploadModal.js","pages/BoardPage.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","toolbarReducer","state","action","type","active","boardReducer","contextMenuActive","console","log","newZoomIn","zoomPercentage","newZoomOut","alert","newImagesObject","images","imageID","image","layer","numLayers","height","width","positionX","positionY","updateImageDragging","newImageX","newImageY","translator","dragging","oldX","oldY","uploadModalReducer","errorMessage","rootReducer","combineReducers","initState","handledSuccessfully","Home","className","src","logo","alt","to","Button","Component","keyBindHandler","event","preventDefault","dispatch","key","altKey","shiftKey","which","zoomOut","zoomIn","mouseDown","props","mx","parseInt","clientX","my","clientY","draggingImageID","setDragging","mouseMove","dx","dy","draggingImage","draggingUpdate","addImageToBoard","Board","mouseDownHandler","stopPropagation","mouseUpHandler","mouseUp","mouseMoveHandler","rightClick","layers","i","layerName","push","ref","onMouseDown","this","onMouseMove","onMouseUp","onKeyDown","tabIndex","refs","posX","posY","ctx","getContext","Image","onload","drawImage","zoom","onContextMenu","drawLayers","connect","isImage","filename","parts","split","length","getExtension","toLowerCase","processImage","Promise","resolve","URL","createObjectURL","handleFile","a","target","files","name","file","uuidv5","Date","now","uploadUnsuccessful","Toolbar","startUploadModal","onClick","size","Footer","href","UploadModal","closeUploadModal","Modal","show","Header","closeButton","Title","Body","htmlFor","onChange","id","BoardPage","componentDidUpdate","window","onbeforeunload","when","message","defaultValue","Main","exact","path","component","App","React","Boolean","location","hostname","match","ReactDOM","render","store","initialState","createStore","applyMiddleware","thunk","configureStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4b5efcb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6279d13d.png\";","const toolbarReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'UPLOAD_IMAGE': // if user types in the search bar\n            return { ...state, active: true }\n        case 'SAVE_CANVAS': // if user presses the submit button\n            return { ...state }\n        default:\n            return state\n        }\n}\n\nexport default toolbarReducer;","const boardReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'RIGHT_CLICK':\n            return { ...state, contextMenuActive: true }\n        case 'ZOOM_IN':\n            console.log(\"zooming in\")\n            let newZoomIn = state.zoomPercentage;\n            if (state.zoomPercentage < 125) {\n                newZoomIn += 25;\n            }\n            console.log(\"new zoom: \" + newZoomIn)\n            return {...state, zoomPercentage: newZoomIn }\n        case 'ZOOM_OUT':\n            console.log(\"zooming out\")\n            let newZoomOut = state.zoomPercentage;\n            if (state.zoomPercentage > 25) {\n                newZoomOut -= 25;\n            }\n            console.log(\"new zoom: \" + newZoomOut)\n            return {...state, zoomPercentage: newZoomOut }\n        case 'MOUSE_DOWN':\n            alert(\"mouse down\");\n            return state\n        case 'ADD_IMAGE_TO_BOARD':\n            // get current images\n            let newImagesObject = state.images;\n            \n            // add a new image to the highest layer\n            newImagesObject[action.imageID] = { image: action.image, \n                layer: state.numLayers, height: 500, width: 500, \n                positionX: 0, positionY: 0 };\n            return { ...state, images: newImagesObject }\n        case \"DRAGGING_UPDATE\":\n            // get current images\n            let updateImageDragging = state.images;\n            updateImageDragging[action.imageID] = { positionX: action.newImageX, \n                positionY: action.newImageY };\n            return { ...state, translator: {dragging: true, oldX: action.oldX, oldY: action.oldY}, images: updateImageDragging }\n        case \"SET_DRAGGING\":\n            return state;\n        case \"MOUSE_UP\":\n            return {...state, translator: {dragging: false, oldX: 0, oldY: 0}}\n        default:\n            return state\n        }\n}\n\nexport default boardReducer;","const uploadModalReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'CLOSE_UPLOAD_MODAL': // if user types in the search bar\n            return { ...state, active: false }\n        case 'START_UPLOAD_MODAL': // if user types in the search bar\n            return { ...state, active: true }\n        case 'UPLOAD_UNSUCCESSFUL':\n            alert(action.errorMessage);\n            return state;\n        default:\n            return state;\n        }\n}\n\nexport default uploadModalReducer;","import { combineReducers } from 'redux';\nimport toolbarReducer from './toolbarReducer';\nimport boardReducer from './boardReducer';\nimport uploadModalReducer from './uploadModalReducer';\n\nconst rootReducer = combineReducers({\n    toolbarReducer,\n    boardReducer,\n    uploadModalReducer\n});\n\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst initState = {\n        boardReducer: {\n            contextMenuActive: false,\n            zoomPercentage: 50,\n            images: {},\n            numLayers: 0,\n            translator: {\n                dragging: false, // false if not dragging, imageID if dragging\n                oldX: 0,\n                oldY: 0\n            }\n        },\n        toolbarReducer: {\n            \n        },\n        uploadModalReducer: {\n            active: false,\n            handledSuccessfully: false,\n            imageID: null\n        },\n};\n\nexport default function configureStore(initialState=initState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}","import React, { Component } from 'react';\nimport '../css/Home.css';\nimport logo from '../logo.png';\nimport { Link } from 'react-router-dom';\n\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Home extends Component { \n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Home\">\n\t\t\t\t<header className=\"Home-header\">\n\t\t\t\t\t<img src={logo} className=\"Home-logo\" alt=\"logo\" />\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tMake collages. Online. With friends.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t<Link to=\"/board\" className=\"Home-link\">\n\t\t\t\t\t\t<Button>\n\t\t\t\t\t\t\tStart making\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default Home;","export const rightClick = (event) => ({\n    type: 'RIGHT_CLICK'\n})\n\nexport function keyBindHandler(event) {\n    event.preventDefault();\n    return dispatch => {\n        if ((event.key === \"z\" || event.key === \"Ω\") && event.altKey && !event.shiftKey) {\n            alert(\"pressed alt + z\");\n        } else if ((event.which === 90) && event.altKey && event.shiftKey) {\n            alert(\"pressed alt + shift + z\");\n        } else if ((event.key === \"=\" || event.key === \"≠\") && event.altKey) {\n            dispatch(zoomIn());\n        } else if ((event.key === \"-\" || event.key === \"–\") && event.altKey) {\n            dispatch(zoomOut());\n        }\n    }\n}\n\nexport function mouseDown(event, props) {\n    let images = props.images;\n    // get the current mouse position\n    let mx = parseInt(event.clientX);\n    let my = parseInt(event.clientY);\n\n    // test each rect to see if mouse is inside\n    let draggingImageID = null;\n    for (let imageID in images) {\n        let image = [images[imageID]];\n        if (mx > image.positionX && mx < image.positionX + image.width && my > image.positionY && my < image.positionX + image.height) {\n            console.log(\"dragging image\");\n            draggingImageID = imageID;\n            break;\n        }\n    }\n    \n    // save the current mouse position\n    if (draggingImageID) {\n        return dispatch => {\n            dispatch(setDragging(draggingImageID, mx, my))\n        }\n    }\n}\n\nexport function mouseMove(event, boardReducer) {\n    // get the imageID of the image that isDragging\n    let imageID = boardReducer.translator.dragging;\n    \n    // get the current mouse position\n    var mx = parseInt(event.clientX);\n    var my = parseInt(event.clientY);\n\n    // calculate the distance the mouse has moved\n    // since the last mousemove\n    var dx = mx - boardReducer.translator.oldX;\n    var dy = my - boardReducer.translator.oldY;\n    \n    // move the image that isDragging \n    // by the distance the mouse has moved\n    // since the last mousemove\n    let draggingImage = boardReducer.images[imageID];\n    let newImageX = draggingImage.positionX + dx;\n    let newImageY = draggingImage.positionY + dy;\n    return dispatch => {\n        dispatch(draggingUpdate(imageID, newImageX, newImageY, mx, my));\n    };\n}\n\nexport const setDragging = (imageID, oldX, oldY) => ({\n    type: 'SET_DRAGGING',\n    imageID,\n    oldX,\n    oldY\n})\n\nexport const mouseUp = () => ({\n    type: 'MOUSE_UP'\n})\n\nexport const draggingUpdate = (imageID, newImageX, newImageY, oldX, oldY) => ({\n    type: 'DRAGGING_UPDATE',\n    imageID,\n    newImageX,\n    newImageY,\n    oldX,\n    oldY\n})\n\nexport const zoomIn = (event) => ({\n    type: 'ZOOM_IN'\n})\n\nexport const zoomOut = (event) => ({\n    type: 'ZOOM_OUT'\n})\n\nexport const addImageToBoard = (imageID, image) => ({\n    type: 'ADD_IMAGE_TO_BOARD',\n    imageID,\n    image\n})\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../css/Board.css';\nimport { rightClick, keyBindHandler, mouseUp, mouseDown, mouseMove } from '../actions/boardActions'\n\n\nfunction getBoardClass(zoom) {\n\tif (zoom === 125) {\n\t\treturn \"myBoard125\";\n\t} else if (zoom === 100) {\n\t\treturn \"myBoard100\";\n\t} else if (zoom === 75) {\n\t\treturn \"myBoard75\";\n\t} else if (zoom === 50) {\n\t\treturn \"myBoard50\";\n\t} else if (zoom === 25) {\n\t\treturn \"myBoard25\";\n\t} else {\n\t\treturn \"myBoard50\";\n\t}\n}\n\nclass Board extends Component { \n\t\n\t// handles mouse down event, sets dragging to true if mouse down on an image\n\tmouseDownHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tmouseDown(event, this.props.boardReducer);\n\t}\n\t\n\t// ends dragging event\n\tmouseUpHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tthis.props.mouseUp();\n\t}\n\t\n\tmouseMoveHandler = (event) => {\n\t\tif (this.props.boardReducer.translator.dragging) {\n\t\t\tconsole.log((\"mouse x: \") + event.clientX + \", mouse y: \" + event.clientY);\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tmouseMove(event, this.props.boardReducer);\n\t\t}\n\t}\n\t\n\t// handle right click, bring up custom context menu\n\trightClick = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.rightClick();\n\t}\n\t\n\t// handle key binds, for undo/redo, and zooming in/out\n\tkeyBindHandler = (event) => {\n\t\tthis.props.dispatch(keyBindHandler(event));\n\t}\n\t\n\tdrawLayers(numLayers) {\n\t\tlet layers = [];\n\t\tfor (let i = 0; i <= numLayers; i++) {\n\t\t\tlet layerName = \"layer_\"+i;\n\t\t\tlayers.push(<canvas key={layerName} ref={layerName} className=\"layer\"\n\t\t\t\tonMouseDown={this.mouseDownHandler} onMouseMove={this.mouseMoveHandler}\n\t\t\t\tonMouseUp={this.mouseUpHandler} onKeyDown={this.keyBindHandler} tabIndex=\"0\" />);\n\t\t}\n\t\t\n\t\tfor(var imageID in this.props.boardReducer.images) {\n\t\t\tlet layer = this.refs[\"layer_\"+this.props.boardReducer.images[imageID].layer];\n\t\t\tlet height = this.props.boardReducer.images[imageID].height;\n\t\t\tlet width = this.props.boardReducer.images[imageID].width;\n\t\t\tlet posX = this.props.boardReducer.images[imageID].positionX;\n\t\t\tlet posY = this.props.boardReducer.images[imageID].positionY;\n\t\t\tlet ctx = layer.getContext(\"2d\");\n\t\t\tlet image = new Image();\n\t\t\timage.ref = imageID;\n\t\t\timage.src = this.props.boardReducer.images[imageID].image;\n\t\t\timage.onload = function() {\n\t\t\t\tctx.drawImage(image, posX, posY, width, height);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn layers;\n\t}\n\t\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{/* define the board--the most important part of this app */}\n\t\t\t\t<div ref=\"board\" className={getBoardClass(this.props.boardReducer.zoomPercentage)} \n\t\t\t\t\t\tonContextMenu={this.rightClick} onKeyDown={this.keyBindHandler}\n\t\t\t\t\t\ttabIndex=\"0\">\n\t\t\t\t\t{this.drawLayers(this.props.boardReducer.numLayers)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\t...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n\trightClick: () => dispatch(rightClick()),\n\tmouseUp: () => dispatch(mouseUp()),\n\tdispatch\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","import { v5 as uuidv5 } from 'uuid';\nimport { addImageToBoard } from '../actions/boardActions'\n\nconst COCO_NAMESPACE = 'bcc39d63-f630-43bc-becc-fa6821762aeb';\n\n\nfunction getExtension(filename) {\n    let parts = filename.split('.');\n    return parts[parts.length - 1];\n}\n\n// check that file is an image, and is in a supported format\nfunction isImage(filename) {\n    var extension = getExtension(filename);\n    switch (extension.toLowerCase()) {\n        case 'jpg':\n        case 'jpeg':\n        case 'gif':\n        case 'bmp':\n        case 'png':\n        case 'heic': // High Efficiency Image File -- iPhone uses this format\n            return true;\n        default:\n            return false;\n    }\n}\n\nfunction generateImageID(file) {\n    // generate unique identifier based on file name and current time\n    let imageID = uuidv5(file.name + Date.now(), COCO_NAMESPACE);\n    return imageID;\n}\n\nfunction processImage(image) {\n    return new Promise(resolve => {\n        resolve(URL.createObjectURL(image));\n      });\n}\n\nexport function handleFile(event) {\n    event.preventDefault();\n    return async dispatch => {\n        if (isImage(event.target.files[0].name)) {\n            let imageID = generateImageID(event.target.files[0]);\n            let image = await processImage(event.target.files[0]);\n            dispatch(addImageToBoard(imageID, image));\n        } else {\n            dispatch(uploadUnsuccessful(\".\" + event.target.files[0].type + \" files are not currently supported.\"));\n        }\n    }\n}\n\nexport const uploadUnsuccessful = errorMessage => ({\n    type: 'UPLOAD_UNSUCCESSFUL',\n    errorMessage\n});\n\nexport const closeUploadModal = event => ({\n    type: 'CLOSE_UPLOAD_MODAL'\n});\n\nexport const startUploadModal = event => ({\n    type: 'START_UPLOAD_MODAL'\n});\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../css/Toolbar.css';\nimport { FiLayers } from 'react-icons/fi';\nimport { MdAddBox } from 'react-icons/md';\nimport { AiOutlineDownload } from 'react-icons/ai';\n\nimport { startUploadModal } from '../actions/uploadModalActions';\n\n\nclass Toolbar extends Component { \n\t\n\tstartUploadModal = (event) => {\n\t\tthis.props.startUploadModal(event);\n\t}\n\t\n\trender() {\n\t    return(\n            <div className=\"toolbar\">\n\t\t\t\t<span className=\"item\" onClick={this.startUploadModal}><MdAddBox size={18}/></span>\n\t\t\t\t<span className=\"item\"><FiLayers size={18}/></span>\n\t\t\t\t<span className=\"item\"><AiOutlineDownload size={18}/></span>\n            </div>\n\t    )\n\t  }\n\t}\n\n\nconst mapStateToProps = state => ({\n    ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n    startUploadModal: (event) => dispatch(startUploadModal(event))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","import React, { Component } from 'react';\nimport '../css/Footer.css';\nimport logo from '../logo.png';\nimport { Link } from 'react-router-dom';\n\nclass Footer extends Component { \n\t\n\trender() {\n\t    return(\n\t      <div>\n\t\t\t<div className=\"footer\">\n                <Link to=\"/\">\n                    <img src={logo} className=\"logo\" alt=\"logo\" href=\"/\"/>\n                </Link>\n                <p className=\"slogan\">{\" \"} Make collages. With Friends. In your browser.</p>\n\t\t\t</div>\n\t        \n\t      </div>\n\t    )\n\t  }\n\t}\n\n\nexport default Footer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../css/UploadModal.css';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { closeUploadModal, handleFile } from '../actions/uploadModalActions';\n\nimport { MdAddBox } from 'react-icons/md';\n\nclass UploadModal extends Component { \n\t\n\tcloseUploadModal = (event) => {\n        this.props.closeUploadModal(event);\n    }\n\t\n\thandleFile = (event) => {\n\t\t// if successful, dispatches add new image action, else, upload unsuccessful action\n\t\tthis.props.dispatch(handleFile(event));\n\t}\n\t\n\trender() {\n\t\treturn (\n    \t\t<Modal show={this.props.uploadModalReducer.active} className=\"uploadModal\">\n    \t\t\t<Modal.Header closeButton onClick={this.closeUploadModal}>\n    \t\t\t\t<Modal.Title>Upload images</Modal.Title>\n    \t\t\t</Modal.Header>\n    \t\t\t<Modal.Body className=\"mainBody\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tDrag and drop an image, or click to upload.\n\t\t\t\t\t</p>\n\t\t\t\t\t<label htmlFor=\"dragZone\">\n\t\t\t\t\t\t<div className=\"dragZone\">\n\t\t\t\t\t\t\t<MdAddBox size={32} className=\"icon\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type=\"file\" onChange={this.handleFile} id=\"dragZone\"/>\n\t\t\t\t</Modal.Body>\n    \t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n    ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tcloseUploadModal: (event) => dispatch(closeUploadModal(event)),\n\tdispatch\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadModal);","import React, { Component } from 'react';\nimport '../css/BoardPage.css';\n\nimport Board from '../components/Board';\nimport Toolbar from '../components/Toolbar';\nimport Footer from '../components/Footer';\nimport UploadModal from '../components/UploadModal';\nimport { Prompt } from 'react-router'\n\nclass BoardPage extends Component { \n\tcomponentDidUpdate = () => {\n\t  if (true) {\n\t    window.onbeforeunload = () => true\n\t  } else {\n\t    window.onbeforeunload = undefined\n\t  }\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"pageContainer\">\n\t\t\t\t<Prompt\n\t\t\t\t\twhen={true}\n\t\t\t\t\tmessage='You have unsaved changes to your board, are you sure you want to leave?'\n\t\t\t\t/>\n\t\t\t\t<UploadModal/>\n\t\t\t\t<div className=\"titleWrapper\">\n\t\t\t\t\t<input className=\"title\" type=\"string\" defaultValue=\"my board\"></input>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"boardWrapper\">\n\t\t\t\t\t<Board/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"toolbarWrapper\">\n\t\t\t\t\t<Toolbar/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"footerWrapper\">\n\t\t\t\t\t<Footer/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\n\nexport default BoardPage;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport BoardPage from './BoardPage';\n\nconst Main = () => {\n    return (\n        <Switch>\n            <Route exact path='/' component={Home}></Route>\n            <Route exact path='/board' component={BoardPage}></Route>\n        </Switch>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport './css/App.css';\nimport Main from './pages/Main';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Main />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}